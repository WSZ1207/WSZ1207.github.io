<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蛋白生信分析流程</title>
      <link href="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>序列蛋白初级分析流程，验证则需进行实验</p><p>1.通过NCBI中的BLAST模块将克隆所得的牛XXX基因序列进行同源性比对</p><p>同源对比可见”系统进化树构建“：<a href="https://wsz1207.github.io/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/">https://wsz1207.github.io/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/</a></p><p>2.运用在线工具ProtPram 分析XXX的蛋白质理化性质；</p><p>ProtParam能做什么？</p><ol><li><p>基于蛋白质序列的组分分析；</p></li><li><p>氨基酸亲疏水性等分析为高级结构预测提供参考。</p><p>网址：<a href="https://www.expasy.org/">https://www.expasy.org/</a></p><p>打开后CTRL+F 搜索ProtParam</p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217091630145.png" alt="image-20211217091630145">![image-20211217091646533]</p></li></ol><p>进入</p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217092108799.png" alt="image-20211217092108799"></p><p>结果解析</p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217092824379.png" alt="image-20211217092824379"></p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217092842232.png" alt="image-20211217092842232"></p><p>3.ProtScal 分析蛋白质的亲疏水性；</p><p>一样在  expasy界面 打开后CTRL+F 搜索ProtScal</p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217093302810.png" alt="image-20211217093302810"></p><p>继续输入蛋白序列，没差别，界面默认即可</p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217094625934.png" alt="image-20211217094625934"></p><p><strong>呈上</strong></p><p>蛋白的氨基酸序列决定了它的亲水性/疏水性，亲疏水性决定了它在水中的可溶解性，一般高度可溶的蛋白质都是亲水性的部分裸露在最外面，疏水性的在内部。</p><p>可以推测可能的跨膜区，看看是不是膜蛋白</p><p><strong>启下</strong></p><p>4.运用TMpred 预测蛋白质跨膜区和跨膜方向；</p><p><a href="https://services.healthtech.dtu.dk/service.php?TMHMM-2.0">https://services.healthtech.dtu.dk/service.php?TMHMM-2.0</a> </p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217095230169.png" alt="image-20211217095230169"></p><p>代表无跨膜螺旋区</p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217095607891.png" alt="image-20211217095607891"></p><p>5.NetPhos 3.1 Server 预测XXX中潜在的磷酸化位点；</p><p>​        蛋白磷酸化是一种非常普遍存在的翻译后修饰（Protein post-translational modification，PTM）的一种类型。蛋白质的磷酸化是通过酶促反应将磷酸基团转移到蛋白组氨基酸残基上的过程，在生物体内普遍存在，蛋白质的磷酸化与去磷酸化这一可逆过程几乎参与了生命活动的所有过程，与信号传导、细胞周期、生长发育、癌症发生发展等密切相关。<br>​        ATP和ADP的相互转化应该是我们生物学习中最早接触的磷酸化和去磷酸化了，也是目前最主要的信号转导方式。基于磷酸化的重要性和普遍性，可以说是目前研究最广泛的修饰类型。指由蛋白质激酶催化的把ATP的磷酸基转移到底物蛋白质氨基酸残基（丝氨酸、苏氨酸、酪氨酸）上的过程，或者在信号作用下结合GTP，是生物体一种普遍的调节方式，在细胞信号转导的过程中起重要作用。它可以快速且可逆地调控信号传递功能，包括催化活性、蛋白质-蛋白质相互作用等。<br> 磷酸化主要集中在<em>丝氨酸</em>、<em>苏氨酸</em>、<em>酪氨酸</em> 残基上，这些残基上具有游离的羟基，且本身不带电荷，当磷酸化后蛋白质便具有了电荷，从而使结构发生变化，进一步引起蛋白质活性的变化。（来源：百度）</p><p>​            工具：NetPhos 3.1网址：<a href="https://services.healthtech.dtu.dk/service.php?NetPhos-3.1">https://services.healthtech.dtu.dk/service.php?NetPhos-3.1</a></p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217100655874.png" alt="image-20211217100655874"></p><p><img src="/2021/12/17/%E8%9B%8B%E7%99%BD%E7%94%9F%E4%BF%A1%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B/image-20211217100847139.png" alt="image-20211217100847139"></p><h1 id="：分析的氨基酸位置（磷酸化位点）"><a href="#：分析的氨基酸位置（磷酸化位点）" class="headerlink" title="：分析的氨基酸位置（磷酸化位点）"></a>：分析的氨基酸位置（磷酸化位点）</h1><p>x：氨基酸（磷酸化）简写<br> Context：包含分析位点的9个氨基酸序列<br> Score：结果打分（0-1），一般高于0.5则为阳性结果<br> Kinase：激酶信息，unsp表示没有特异性激酶预测结果<br> Answer：Yes表示阳性结果，即打分高于0.5</p><p>6.运用SOPMA 分析牛XXX蛋白的二级结构；</p><p>7.运用SWISSMODEL 分析XXX蛋白的三级空间构型。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>相对表达量前期数据过滤</title>
      <link href="/2021/12/16/%E7%9B%B8%E5%AF%B9%E8%A1%A8%E8%BE%BE%E9%87%8F%E5%89%8D%E6%9C%9F%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4/"/>
      <url>/2021/12/16/%E7%9B%B8%E5%AF%B9%E8%A1%A8%E8%BE%BE%E9%87%8F%E5%89%8D%E6%9C%9F%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>未处理的数据由于read counts数值过低</p><p>导致转换为FPKM和TPM的值也过低，我的数据预测的非编码有6万多个，但是大多表达量低，需要进行过滤</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rm(list=ls())</span><br><span class="line">library(openxlsx)</span><br><span class="line">## read in data</span><br><span class="line">dat = read.xlsx(&quot;circRNA_ALL_Tpm.xlsx&quot;,sheet = 1)</span><br><span class="line">View(head(dat))</span><br></pre></td></tr></table></figure><p><img src="/2021/12/16/%E7%9B%B8%E5%AF%B9%E8%A1%A8%E8%BE%BE%E9%87%8F%E5%89%8D%E6%9C%9F%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4/image-20211216094707231.png" alt="image-20211216094707231"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#过滤平均Tpm&lt;10的表达值</span><br><span class="line">keep &lt;- rowSums(dat&gt;0) &gt;= floor(0.5*ncol(dat)) #floor 向下取整；一行所有值加起来乘以0.5 小于这个的基因全部删除</span><br><span class="line">table(keep)</span><br><span class="line"></span><br><span class="line">filter_count &lt;- dat[keep,]</span><br><span class="line">filter_count[1:22,1:22] #选择所有数据</span><br><span class="line">dim(filter_count)</span><br><span class="line"></span><br><span class="line">dat = filter_count</span><br><span class="line">View(head(dat))</span><br></pre></td></tr></table></figure><p><img src="/2021/12/16/%E7%9B%B8%E5%AF%B9%E8%A1%A8%E8%BE%BE%E9%87%8F%E5%89%8D%E6%9C%9F%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4/image-20211216094741314.png" alt="image-20211216094741314"><img src="/2021/12/16/%E7%9B%B8%E5%AF%B9%E8%A1%A8%E8%BE%BE%E9%87%8F%E5%89%8D%E6%9C%9F%E6%95%B0%E6%8D%AE%E8%BF%87%E6%BB%A4/image-20211216094753522.png" alt="image-20211216094753522"></p>]]></content>
      
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>差异表达Upset分析</title>
      <link href="/2021/12/15/%E5%B7%AE%E5%BC%82%E8%A1%A8%E8%BE%BEUpset%E5%88%86%E6%9E%90/"/>
      <url>/2021/12/15/%E5%B7%AE%E5%BC%82%E8%A1%A8%E8%BE%BEUpset%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>多组基因差异表达后如何进行Veen，这时可以用到Upset</p><p>安装包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BiocManager::install(c(&#x27;UpSetR&#x27;,&#x27;dplyr&#x27;,&#x27;tidyr&#x27;))</span><br></pre></td></tr></table></figure><p>输入文件</p><p><img src="/2021/12/15/%E5%B7%AE%E5%BC%82%E8%A1%A8%E8%BE%BEUpset%E5%88%86%E6%9E%90/image-20211215201102881.png" alt="image-20211215201102881"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">rm(list=ls())</span><br><span class="line">library(UpSetR)</span><br><span class="line">library(dplyr)</span><br><span class="line">library(tidyr)</span><br><span class="line">library(openxlsx)</span><br><span class="line"># 读取6个分组的差异分析结果</span><br><span class="line">DEG_DESeq2_Heart_vs_Fat = read.xlsx(&quot;condition_Heart_vs_Fat_FC_2_Padj0.05.xlsx&quot;,sheet = 1)</span><br><span class="line">DEG_DESeq2_Liver_vs_Fat = read.xlsx(&quot;condition_Liver_vs_Fat_FC_2_Padj0.05.xlsx&quot;,sheet = 1)</span><br><span class="line">DEG_DESeq2_Spleen_vs_Fat = read.xlsx(&quot;condition_Spleen_vs_Fat_FC_2_Padj0.05.xlsx&quot;,sheet = 1)</span><br><span class="line">DEG_DESeq2_Lung_vs_Fat = read.xlsx(&quot;condition_Lung_vs_Fat_FC_2_Padj0.05.xlsx&quot;,sheet = 1)</span><br><span class="line">DEG_DESeq2_Kidney_vs_Fat = read.xlsx(&quot;condition_Kidney_vs_Fat_FC_2_Padj0.05.xlsx&quot;,sheet = 1)</span><br><span class="line">DEG_DESeq2_Muscle_vs_Fat = read.xlsx(&quot;condition_Muscle_vs_Fat_FC_2_Padj0.05.xlsx&quot;,sheet = 1)</span><br><span class="line">ls()</span><br><span class="line"></span><br><span class="line"># 提取所有差异表达的基因名</span><br><span class="line"></span><br><span class="line">DEG_DESeq2_Muscle_vs_Fat &lt;- DEG_DESeq2_Muscle_vs_Fat[DEG_DESeq2_Muscle_vs_Fat$Change!=&quot;Stable&quot;,1] #提取差异表达组，去除不显著的Stable</span><br><span class="line">DEG_DESeq2_Muscle_vs_Fat = na.omit(DEG_DESeq2_Muscle_vs_Fat) #由于表达值有NA，去除NA 如果没有NA可省略</span><br><span class="line">DEG_DESeq2_Liver_vs_Fat &lt;- DEG_DESeq2_Liver_vs_Fat[DEG_DESeq2_Liver_vs_Fat$Change!=&quot;Stable&quot;,1] </span><br><span class="line">DEG_DESeq2_Liver_vs_Fat = na.omit(DEG_DESeq2_Liver_vs_Fat) </span><br><span class="line">DEG_DESeq2_Spleen_vs_Fat &lt;- DEG_DESeq2_Spleen_vs_Fat[DEG_DESeq2_Spleen_vs_Fat$Change!=&quot;Stable&quot;,1] </span><br><span class="line">DEG_DESeq2_Spleen_vs_Fat = na.omit(DEG_DESeq2_Spleen_vs_Fat) </span><br><span class="line">DEG_DESeq2_Lung_vs_Fat &lt;- DEG_DESeq2_Lung_vs_Fat[DEG_DESeq2_Lung_vs_Fat$Change!=&quot;Stable&quot;,1] </span><br><span class="line">DEG_DESeq2_Lung_vs_Fat = na.omit(DEG_DESeq2_Lung_vs_Fat) </span><br><span class="line">DEG_DESeq2_Kidney_vs_Fat &lt;- DEG_DESeq2_Kidney_vs_Fat[DEG_DESeq2_Kidney_vs_Fat$Change!=&quot;Stable&quot;,1] </span><br><span class="line">DEG_DESeq2_Kidney_vs_Fat = na.omit(DEG_DESeq2_Kidney_vs_Fat) </span><br><span class="line">DEG_DESeq2_Heart_vs_Fat &lt;- DEG_DESeq2_Heart_vs_Fat[DEG_DESeq2_Heart_vs_Fat$Change!=&quot;Stable&quot;,1] </span><br><span class="line">DEG_DESeq2_Heart_vs_Fat = na.omit(DEG_DESeq2_Heart_vs_Fat) </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">data &lt;- list(Heart_vs_Fat = DEG_DESeq2_Heart_vs_Fat,</span><br><span class="line">             Kidney_vs_Fat = DEG_DESeq2_Kidney_vs_Fat,</span><br><span class="line">             Lung_vs_Fat = DEG_DESeq2_Lung_vs_Fat,</span><br><span class="line">             Spleen_vs_Fat = DEG_DESeq2_Spleen_vs_Fat,</span><br><span class="line">             Liver_vs_Fat = DEG_DESeq2_Liver_vs_Fat,</span><br><span class="line">             Muscle_vs_Fat = DEG_DESeq2_Muscle_vs_Fat)</span><br><span class="line">             </span><br><span class="line">#作图</span><br><span class="line">#nsets: 最多展示多少个集合数据。</span><br><span class="line">#nintersects: 展示多少交集。</span><br><span class="line">#mb.ratio： 点点图和条形图的比例。</span><br><span class="line">#order.by： 交集如何排序。这里先根据freq，然后根据degree</span><br><span class="line">#decreasing： 变量如何排序。这里表示freq降序，degree升序</span><br><span class="line"></span><br><span class="line">upset(fromList(data),nsets = 6, order.by = &quot;freq&quot;)</span><br><span class="line"></span><br><span class="line">setsBarColors &lt;-c(&#x27;#EA4335&#x27;, &#x27;#FBBC05&#x27;, &#x27;#34A853&#x27;, &#x27;#4285F4&#x27;, &#x27;#F0E68C&#x27;, &#x27;#BC8F8F&#x27;)</span><br><span class="line">p = upset(fromList(data), nsets = 6, order.by = c(&quot;freq&quot;, &quot;degree&quot;), decreasing = c(TRUE,FALSE),</span><br><span class="line">          sets.bar.color=setsBarColors,</span><br><span class="line">      queries = list(#如果有需要标注的颜色，就在list后面按格式加就是了</span><br><span class="line">  list(</span><br><span class="line">    query = intersects, </span><br><span class="line">    params = list(&quot;Muscle_vs_Fat&quot;, &quot;Liver_vs_Fat&quot;, &quot;Heart_vs_Fat&quot;), </span><br><span class="line">    color = &quot;#DA70D6&quot;, </span><br><span class="line">    active = T), </span><br><span class="line">  list(</span><br><span class="line">    query = intersects, </span><br><span class="line">    params = list(&quot;Muscle_vs_Fat&quot;, &quot;Liver_vs_Fat&quot;), </span><br><span class="line">    color = &quot;#FFA500&quot;, </span><br><span class="line">    active = T), </span><br><span class="line">  list(</span><br><span class="line">    query = intersects, </span><br><span class="line">    params = list(&quot;Muscle_vs_Fat&quot;), </span><br><span class="line">    color = &quot;#4169E1&quot;),</span><br><span class="line">  list(</span><br><span class="line">    query = intersects, </span><br><span class="line">    params = list(&quot;Muscle_vs_Fat&quot;), </span><br><span class="line">    color = &quot;#F0E68C&quot;),</span><br><span class="line">  list(</span><br><span class="line">    query = intersects, </span><br><span class="line">    params = list(&quot;Muscle_vs_Fat&quot;), </span><br><span class="line">    color = &quot;#D2B48C&quot;)</span><br><span class="line">)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">tiff(file = &quot;UPset_veen.tiff&quot;,width = 10,height =6,units = &quot;in&quot;,res = 300,pointsize = 6)</span><br><span class="line">print(p)</span><br><span class="line">dev.off()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>imageJ细胞计数</title>
      <link href="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/"/>
      <url>/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<p>利用imageJ自动细胞计数基于软件自带工具Analyze Particles</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213150849394.png" alt="image-20211213150849394"></p><p>首先对图片进行预处理</p><p>将RGB的照片转换为8-bit的灰阶图</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213151126126.png" alt="image-20211213151126126"></p><p>继续进行Threshold</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213151948877.png" alt="image-20211213151948877"></p><p>勾选Dark background或者调节Red颜色</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152103701.png" alt="image-20211213152103701"></p><p>下方比例尺为红色，调节第二行颜色项目转换为白色</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152244728.png" alt="image-20211213152244728"><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152328593.png" alt="image-20211213152328593"></p><p>有些细胞染色结果不算太好，调节第一行颜色项目增加对比</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152437126.png" alt="image-20211213152437126"><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152516109.png" alt="image-20211213152516109"><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152540922.png" alt="image-20211213152540922"><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213152552817.png" alt="image-20211213152552817"></p><p>Apply应用形成二值化的细胞，此图可以打断细胞，但是打断之前填补细胞空洞</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213153145001.png" alt="image-20211213153145001"></p><p>随后进行细胞分割</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213153303550.png" alt="image-20211213153303550"></p><p>进入Analyze Particles</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213153445273.png" alt="image-20211213153445273"></p><p>注意size，多大的颗粒进行细胞计数</p><p>利用放大镜找到图片中较小的细胞，利用圆形工具圈起来，进行面积比对</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213153917557.png" alt="image-20211213153917557"></p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213153927681.png" alt="image-20211213153927681"></p><p>Area158</p><p>将下限改为150</p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213154041631.png" alt="image-20211213154041631"><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213154152413.png" alt="image-20211213154152413"></p><p><img src="/2021/12/13/imageJ%E7%BB%86%E8%83%9E%E8%AE%A1%E6%95%B0/image-20211213155230205.png" alt="image-20211213155230205"></p><p>出现结果，并且出现每个的面积，后续慢慢识别控制排除错误细胞</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Readcounts转FPKM转TPM</title>
      <link href="/2021/12/09/Readcounts%E8%BD%ACFPKM%E8%BD%ACTPM/"/>
      <url>/2021/12/09/Readcounts%E8%BD%ACFPKM%E8%BD%ACTPM/</url>
      
        <content type="html"><![CDATA[<p>学习大佬的Readcounts转换技术</p><p>录入的文件格式</p><p><img src="/2021/12/09/Readcounts%E8%BD%ACFPKM%E8%BD%ACTPM/image-20211209155812396.png" alt="image-20211209155812396"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">rm(list = ls())</span><br><span class="line">Count_rumen &lt;- read.xlsx(&quot;XXX.xlsx&quot;,sheet = 1)</span><br><span class="line">names(Count_rumen)</span><br><span class="line">rownames(Count_rumen) &lt;- Count_rumen$CircID#这里我犯了一个极为鱼唇的错误 ‘$了Geneid’，关键还没报错，导致最后计算结果没有了命名</span><br><span class="line"></span><br><span class="line">metadata &lt;- Count_rumen[,1:2]#提取基因信息count数据前的几列，就像我的文件只需要提取第一和第二列</span><br><span class="line"></span><br><span class="line">countdata &lt;- Count_rumen[,3:ncol(Count_rumen)]#提取counts数，counts数据主题部分</span><br><span class="line"></span><br><span class="line">cpm &lt;- t(t(countdata)/colSums(countdata) * 1000000)#参考cpm定义</span><br><span class="line"></span><br><span class="line">avg_cpm &lt;- data.frame(avg_cpm=rowMeans(cpm))</span><br><span class="line"></span><br><span class="line">kb &lt;- metadata$Length / 1000</span><br><span class="line"></span><br><span class="line">rpk &lt;- countdata / kb</span><br><span class="line"></span><br><span class="line">tpm &lt;- round(t(t(rpk)/colSums(rpk) * 1000000),2)</span><br><span class="line"></span><br><span class="line">tpm &lt;- as.data.frame(tpm)</span><br><span class="line">names(tpm)</span><br><span class="line"></span><br><span class="line">write.csv(tpm,file = &quot;XXX_ALL_Tpm.csv&quot;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>多组差异分析</title>
      <link href="/2021/12/08/%E5%A4%9A%E7%BB%84%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/"/>
      <url>/2021/12/08/%E5%A4%9A%E7%BB%84%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>安装这些包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BiocManager::install(c(&quot;openxlsx&quot;,&#x27;org.Bt.eg.db&#x27;,&#x27;GO.db&#x27;,&#x27;topGO&#x27;,</span><br><span class="line">                     &#x27;GSEABase&#x27;,&#x27;clusterProfiler&#x27;,&#x27;fgsea&#x27;,</span><br><span class="line">                     &#x27;tidyr&#x27;,&#x27;apeglm&#x27;,&#x27;DESeq2&#x27;,&#x27;pacman&#x27;))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rm(list = ls())</span><br><span class="line">pacman::p_load(&quot;openxlsx&quot;,&#x27;org.Bt.eg.db&#x27;,&#x27;GO.db&#x27;,&#x27;topGO&#x27;,</span><br><span class="line">               &#x27;GSEABase&#x27;,&#x27;clusterProfiler&#x27;,&#x27;fgsea&#x27;,</span><br><span class="line">               &#x27;tidyr&#x27;,&#x27;apeglm&#x27;,&#x27;DESeq2&#x27;)#迅速加载</span><br></pre></td></tr></table></figure><p>插入表格</p><p><img src="/2021/12/08/%E5%A4%9A%E7%BB%84%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/image-20211215193210422.png" alt="image-20211215193210422"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gene_list = read.xlsx(&quot;circRNA_ALL_Tpm.xlsx&quot;,sheet = 1)</span><br><span class="line">colnames(gene_list)</span><br><span class="line">rownames(gene_list) = gene_list$X1</span><br><span class="line">gene_list = gene_list[ ,-1]</span><br><span class="line">head(gene_list)</span><br><span class="line">#rownames(gene_list) &lt;- gene_list$XXX  #这里$出第一列ID，如果错误输出的表格会不完整</span><br><span class="line">length(colnames(gene_list))</span><br><span class="line">gene &lt;- as.matrix(gene_list[,1:21])</span><br><span class="line">head(gene)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2021/12/08/%E5%A4%9A%E7%BB%84%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/image-20211215193438778.png" alt="image-20211215193438778"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">names(gene)</span><br><span class="line"># fake metadata 分组分列</span><br><span class="line">coldata &lt;- data.frame(</span><br><span class="line">  condition = factor(c(</span><br><span class="line">    rep(&quot;Heart&quot;, 3),</span><br><span class="line">    rep(&quot;Liver&quot;, 3),</span><br><span class="line">    rep(&quot;Spleen&quot;, 3),</span><br><span class="line">    rep(&quot;Lung&quot;, 3),</span><br><span class="line">    rep(&quot;Kidney&quot;, 3),</span><br><span class="line">    rep(&quot;Muscle&quot;, 3),</span><br><span class="line">    rep(&quot;Fat&quot;, 3)</span><br><span class="line">    )))</span><br><span class="line"></span><br><span class="line">trait &lt;- c(&#x27;Heart&#x27;,&#x27;Liver&#x27;,&#x27;Spleen&#x27;,&#x27;Lung&#x27;,&#x27;Kidney&#x27;,&#x27;Muscle&#x27;)#所有的组</span><br><span class="line"></span><br><span class="line">coldata$condition &lt;- relevel(coldata$condition, ref = &quot;Fat&quot;)#所有的组与Fat相比，如果有需要，替换Fat成为其他即可</span><br></pre></td></tr></table></figure><p><img src="/2021/12/08/%E5%A4%9A%E7%BB%84%E5%B7%AE%E5%BC%82%E5%88%86%E6%9E%90/image-20211208155201461.png" alt="image-20211208155201461"></p><p>计算</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">str(coldata)</span><br><span class="line"></span><br><span class="line">dds &lt;- DESeqDataSetFromMatrix(</span><br><span class="line">  countData = round(gene),#这里使用了round()，取整数不然计算后的TPM值不为整数会报错</span><br><span class="line">  colData = coldata,</span><br><span class="line">  design= ~ condition)</span><br><span class="line"></span><br><span class="line">dds &lt;- DESeq(dds, betaPrior = FALSE)</span><br><span class="line"></span><br><span class="line">result_extract = as.data.frame(resultsNames(dds)[-1])</span><br><span class="line"></span><br><span class="line">levels(coldata$condition)</span><br><span class="line"></span><br><span class="line">setLabels &lt;- result_extract</span><br></pre></td></tr></table></figure><p>循环对比输出！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">res_ori &lt;- list()</span><br><span class="line"></span><br><span class="line">for (set in 1:length(setLabels$`resultsNames(dds)[-1]`)) </span><br><span class="line">&#123;</span><br><span class="line">  res_ori[[set]] &lt;- as.data.frame(results(dds, name=setLabels$`resultsNames(dds)[-1]`[set]));</span><br><span class="line">  #res_ori_2[[set]] &lt;- data.frame(ENSEMBL=row.names(res_ori_1[[set]]),</span><br><span class="line">                                 #res_ori_1[[set]]);</span><br><span class="line">  #res_ori[[set]] &lt;- dplyr::left_join(res_ori_2[[set]],annot,by=NULL);</span><br><span class="line">  res_ori[[set]]$Change &lt;- ifelse(res_ori[[set]]$padj &lt; 0.05 &amp; </span><br><span class="line">                                    abs(res_ori[[set]]$log2FoldChange) &gt;= 1,</span><br><span class="line">                                  ifelse(res_ori[[set]]$log2FoldChange &gt; 1,&#x27;Up&#x27;,&#x27;Down&#x27;),</span><br><span class="line">                                  &#x27;Stable&#x27;);</span><br><span class="line">  write.csv(res_ori[[set]],paste0(setLabels$`resultsNames(dds)[-1]`[set],&quot;_FC_2_Padj0.05&quot;,&quot;.csv&quot;))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PCA主成分分析</title>
      <link href="/2021/12/08/PCA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/"/>
      <url>/2021/12/08/PCA%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>R包安装</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>miRanda预测miRNA结合位点</title>
      <link href="/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/"/>
      <url>/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<p>首先下载，官网找</p><p><a href="https://www.cs.kent.ac.uk/people/staff/dat/miranda/">https://www.cs.kent.ac.uk/people/staff/dat/miranda/</a></p><p><img src="/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/image-20211122095343256.png" alt="image-20211122095343256"></p><p><img src="/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/image-20211122095359739.png" alt="image-20211122095359739"></p><p>输入文件miRNA.fa  gene.fa</p><p><img src="/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/image-20211122111234814.png" alt="image-20211122111234814"></p><p>linux版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget http://cbio.mskcc.org/microrna_data/miRanda-aug2010.tar.gz</span><br><span class="line">tar -xzvf miRanda-aug2010.tar.gz</span><br><span class="line">cd miRanda-3.3a </span><br><span class="line">./configure </span><br><span class="line">--prefix=/home/wangshuzhe/miRanda2010/miRanda-3.3a #--prefix最好设置为当前文件夹的路径</span><br><span class="line">make install </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">miranda Bos_All-miRNA.fa TCONS_00009489.fa -out All_miRNA.expressed.fa.out.0 -sc 150.0 -en -30 -scale 4.0 -go -2.0 -ge -8.0 -quiet</span><br><span class="line">#从中提取出关键信息</span><br><span class="line">grep &#x27;&gt;&#x27; All_miRNA.expressed.fa.out.0 &gt;All_miRNA.expressed.fa.out.0.miRanda.aln</span><br><span class="line">#最后得到的文件即为miRNA与靶基因，最后将结果输入cytoscape画网络图。</span><br></pre></td></tr></table></figure><p><img src="/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/image-20211122105613488.png" alt="image-20211122105613488"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">miranda Bos_All-miRNA.fa TCONS_00009489.fa -out All_miRNA.expressed.fa.out.0 -sc 150.0 -en -20 -scale 4.0 -go -2.0 -ge -8.0 -quiet</span><br><span class="line">#从中提取出关键信息</span><br><span class="line">grep &#x27;&gt;&#x27; All_miRNA.expressed.fa.out.0 &gt;All_miRNA.expressed.fa.out.0.miRanda.aln</span><br><span class="line">#最后得到的文件即为miRNA与靶基因，最后将结果输入cytoscape画网络图。</span><br></pre></td></tr></table></figure><p><img src="/2021/11/22/miRanda%E9%A2%84%E6%B5%8BmiRNA%E7%BB%93%E5%90%88%E4%BD%8D%E7%82%B9/image-20211122111123118.png" alt="image-20211122111123118"></p><p>提取结果</p><p>miranda Bos_All-miRNA.fa circMYH2.fa -out circMYH2.fa.out.0 -sc 140.0 -en -25 -scale 4.0 -go -2.0 -ge -8.0 -quiet</p><p>grep ‘&gt;’ circMYH2.fa.out.0 &gt;circMYH2.fa.out.0.miRanda.aln</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>解决linux shell脚本无法执行，报错syntax error near unexpected token `$&#39;\r&#39;&#39;</title>
      <link href="/2021/11/20/%E8%A7%A3%E5%86%B3linux-shell%E8%84%9A%E6%9C%AC%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%EF%BC%8C%E6%8A%A5%E9%94%99syntax-error-near-unexpected-token-r/"/>
      <url>/2021/11/20/%E8%A7%A3%E5%86%B3linux-shell%E8%84%9A%E6%9C%AC%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%EF%BC%8C%E6%8A%A5%E9%94%99syntax-error-near-unexpected-token-r/</url>
      
        <content type="html"><![CDATA[<p><img src="/2021/11/20/%E8%A7%A3%E5%86%B3linux-shell%E8%84%9A%E6%9C%AC%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%EF%BC%8C%E6%8A%A5%E9%94%99syntax-error-near-unexpected-token-r/image-20211120112057910.png" alt="image-20211120112057910"></p><p>本来脚本没什么问题的</p><p>原因在于录入脚本是在windows系统上的TXT进行了粘贴复制，导致格式错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim -b XXX.sh</span><br></pre></td></tr></table></figure><p><img src="/2021/11/20/%E8%A7%A3%E5%86%B3linux-shell%E8%84%9A%E6%9C%AC%E6%97%A0%E6%B3%95%E6%89%A7%E8%A1%8C%EF%BC%8C%E6%8A%A5%E9%94%99syntax-error-near-unexpected-token-r/image-20211120112354904.png" alt="image-20211120112354904"></p><p>有了莫名其妙的^M</p><p>使用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/\r//g&#x27; XXX.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>samtools flagstat统计bam文件</title>
      <link href="/2021/09/27/flagstat%E7%BB%9F%E8%AE%A1bam%E6%96%87%E4%BB%B6/"/>
      <url>/2021/09/27/flagstat%E7%BB%9F%E8%AE%A1bam%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>flagstat作为统计bam文件的工具存在</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">##双端</span><br><span class="line">ls *.bam |perl -e &#x27;while(&lt;&gt;)&#123;chomp;$_=~s/.hisat.bam//g;print&quot;samtools flagstat -@ 6 $_.hisat.bam &gt;$_.flagstat\n&quot;;&#125;&#x27; - |less -S &gt;flagstat.sh</span><br><span class="line">nohup bash flagstat.sh 1&gt;flag_log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">14608455 + 0 in total (QC-passed reads + QC-failed reads)     ## reads总数</span><br><span class="line">37967 + 0 secondary                                                                  ##出现比对到参考基因组多个位置的reads数</span><br><span class="line">0 + 0 supplementary                                                                   ##可能存在嵌合的reads数</span><br><span class="line">0 + 0 duplicates                                                                          ##重复的reads数</span><br><span class="line">14590894 + 0 mapped (99.88% : N/A)                                      ##比对到参考基因组上的reads数</span><br><span class="line">14570488 + 0 paired in sequencing                                           ##属于PE read的reads总数。</span><br><span class="line">7285244 + 0 read1                                                                     ##PE read中Read 1 的reads 总数。</span><br><span class="line">7285244 + 0 read2                                                                     ##PE read中Read 2 的reads 总数。</span><br><span class="line">14507068 + 0 properly paired (99.56% : N/A)                            ##完美比对的reads总数。PE两端reads比对到同一条序列，且根据比对结果推断的插入片段大小符合设置的阈值。</span><br><span class="line">14551500 + 0 with itself and mate mapped                                ##PE两端reads都比对上参考序列的reads总数。</span><br><span class="line">1427 + 0 singletons (0.01% : N/A)                                              ##PE两端reads，其中一端比上，另一端没比上的reads总数。</span><br><span class="line">26260 + 0 with mate mapped to a different chr                          ##PE read中，两端分别比对到两条不同的序列的reads总数。</span><br><span class="line">17346 + 0 with mate mapped to a different chr (mapQ&gt;=5)       ##PE read中，两端分别比对到两条不同的序列，且mapQ&gt;=5的reads总数。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>mRNA分析手段</title>
      <link href="/2021/09/13/mRNA%E5%88%86%E6%9E%90%E6%89%8B%E6%AE%B5/"/>
      <url>/2021/09/13/mRNA%E5%88%86%E6%9E%90%E6%89%8B%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="55d720bad15ef83f04cd2acca891a8b93ab6e6e185f8893ce575875fec9d4923"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>常用参考基因组网址</title>
      <link href="/2021/09/13/%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%BD%91%E5%9D%80/"/>
      <url>/2021/09/13/%E5%B8%B8%E7%94%A8%E5%8F%82%E8%80%83%E5%9F%BA%E5%9B%A0%E7%BB%84%E7%BD%91%E5%9D%80/</url>
      
        <content type="html"><![CDATA[<p><a href="https://links.jianshu.com/go?to=https://www.ncbi.nlm.nih.gov/genome/">NCBI genome</a></p><p><a href="https://links.jianshu.com/go?to=http://uswest.ensembl.org/info/data/ftp/index.html">Ensembl FTP</a>牛基因组还是首推 Ensembl</p><p><a href="https://links.jianshu.com/go?to=http://hgdownload.cse.ucsc.edu/goldenPath/">UCSC FTP</a>：cytoband文件可能含有gneg等标识，其中acen表示着丝粒区域、stalk表示近端着丝粒区域、gvar表示异染色质，例如臂间或端粒区域。</p><p><a href="https://links.jianshu.com/go?to=http://support.illumina.com/sequencing/sequencing_software/igenome.html">iGenomes</a>：部分模式生物bowtie、bowtie2和BWA索引基因组。</p><p><a href="https://links.jianshu.com/go?to=https://ccb.jhu.edu/software/hisat2/index.shtml">HISAT2</a>：部分模式生物HISAT2索引基因组。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>kmeans聚类分析</title>
      <link href="/2021/09/02/kmeans%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/"/>
      <url>/2021/09/02/kmeans%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>kmeans的介绍参考知乎：<a href="https://zhuanlan.zhihu.com/p/78798251?utm_source=qq">https://zhuanlan.zhihu.com/p/78798251?utm_source=qq</a></p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>容易理解，聚类效果不错，虽然是局部最优， 但往往局部最优就够了；</li><li>处理大数据集的时候，该算法可以保证较好的伸缩性；</li><li>当簇近似高斯分布的时候，效果非常不错；</li><li>算法复杂度低。</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>K 值需要人为设定，不同 K 值得到的结果不一样；</li><li>对初始的簇中心敏感，不同选取方式会得到不同结果；</li><li>对异常值敏感；</li><li>样本只能归为一类，不适合多分类任务；</li><li>不适合太离散的分类、样本类别不平衡的分类、非凸形状的分类。</li></ul><hr><p>开始计算</p><p>导入数据</p><p><img src="/2021/09/02/kmeans%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/image-20210902100906667.png" alt="image-20210902100906667"></p><p>数据格式如上所示，虽然低，但是不要所有的值全为NA，运行代码会报错</p><p>NA即为A-G的表达值全部为0</p><p>打开R</p><p>导入数据：</p><p>rm(list = ls())<br>getwd();<br>workingDir = “.”;<br>setwd(workingDir);<br>options(stringsAsFactors = FALSE);</p><p>data=read.csv(“Data_kmeans.csv”)<br>rownames(data)=data$ID<br>mean=data[,-1]<br>data=mean</p><p>data_train_matrix=as.matrix(t(#最后再把将标准化的结果再转置，将行变成列，列变成行<br>                              scale(#每一列取个均值，取个方差，每个点的值取个均值，取个方差，这样得到的就是标准化的值，但是是对每一列进行的标准化，所以先对数据进行转置，才能满足对函数的要求<br>                                t(data)#先进行进行转置，行变成列，列变成行，然后对scale函数对其进行处理<br>                                )<br>                              )<br>                            )</p><p><img src="/2021/09/02/kmeans%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/image-20210902105755231.png" alt="image-20210902105755231"></p><p>继续</p><p>k = 8   #选择分类多少；赋值</p><p>#核心代码#<br>cl=kmeans(data_train_matrix,k,iter.max = 1000)</p><p>#data_train_matrix 标准化的数值；#iter.max 需要进行diedai?的次数，首先是随机选择的点进行的聚类，聚完类进行聚类分析的更新以后，再进行聚类，就是迭代，1000个没啥问题，如果1000次觉得少，可以进行增加，10000，十万都可以，这都是没事问题) #k,表示聚类的个数nstart表示聚类的起始个数，如果数据量不大可以不要，这个值可以设置比k值小，也可以大）</p><p>#结果输出</p><p>write.table(cl$centers,file=”kmeans_center.txt”,<br>            sep = “\t”,quote = F,row.names = T)#quote 是否需要双引号输出，row.name=T 表示输出行的名字</p><p>result = data.frame(id=row.names(data),cluster = cl$cluster,data)</p><p>write.table(result,file=”kmeans_cluster.txt”,<br>            sep = “\t”,quote = F,row.names = F)</p><p>cluster = as.matrix(cl$cluster)</p><p>rownum = 2 #画几行，根据图进行调整<br>colnum = 4 #画几列</p><p>pdf(file = “kmeans.pdf”,<br>    width = colnum<em>2,height =rownum</em>2)</p><p>par(mfrow=c(rownum,colnum),mar=c(1.5,1.3,1.2,0.4)+0.1, #c,3行4列；mar给出图的四条边；<br>    mgp=c(0.5,0.05,0),tck=0.02,cex.axis=0.8,cex.lab=0.8, #mgp给出轴的坐标标签和轴线条线边距值；tck:刻度值；axis:轴的刻度大小<br>    cex.main=1,font.lab=1,font.axis=1,font.main=1,col.axis=”black”) #cex.main：标题；font.lab=1,font.axis=1,font.main=1：字体；颜色灰色</p><p>color=rainbow(k)</p><p>for (i in 1:k) {<br>  x=cluster[,1]==i  #==判断是否相等<br>  part=data_train_matrix[x,]<br>  len=dim(part)[1]</p><p> part=rbind(part,cl$centers[i,])</p><p>  matplot(t(part),type=’l’,lty=1,col=c(rep(color[i],len),rep(“black”,1)),<br>          axes=F,main=paste(“Cluter”,i,seq=””),xlab = “”,ylab = “Standardised BSRP”,<br>           ylim = range(data_train_matrix))</p><p>  box(lwd=0.5,col=”black”)<br>  axis(2,lwd=0.5,col=”black”,las=1)<br>  axis(1,1:dim(data_train_matrix)[2],labels = F,lwd=0.5,mgp=c(0,-0.2,0))<br>  text(1:dim(data_train_matrix)[2],par(“usr”)[3]-0.05,srt=45,col=”black”,adj=1,<br>       xpd=T,labels = colnames(data_train_matrix),cex=0.8) </p><p>  }<br>  dev.off()</p><p>最后<img src="/2021/09/02/kmeans%E8%81%9A%E7%B1%BB%E5%88%86%E6%9E%90/image-20210902110212276.png" alt="image-20210902110212276"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>miRNA_seq测序分析</title>
      <link href="/2021/07/31/miRNA-seq%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/"/>
      <url>/2021/07/31/miRNA-seq%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>首先，下载需要的miRNAbase数据  发卡，前体，成熟序列</p><p><img src="/2021/07/31/miRNA-seq%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/image-20210731093849983.png" alt="image-20210731093849983"></p><p>前体数据</p><p>wget -c <a href="ftp://mirbase.org/pub/mirbase/CURRENT/miRNA.dat.gz">ftp://mirbase.org/pub/mirbase/CURRENT/miRNA.dat.gz</a></p><p>成熟体序列</p><p>wget -c <a href="ftp://mirbase.org/pub/mirbase/CURRENT/mature.fa.gz">ftp://mirbase.org/pub/mirbase/CURRENT/mature.fa.gz</a></p><p><img src="/2021/07/31/miRNA-seq%E6%B5%8B%E5%BA%8F%E5%88%86%E6%9E%90/image-20210731093934705.png" alt="image-20210731093934705">慢慢下吧</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基因ID转换</title>
      <link href="/2021/07/27/%E5%9F%BA%E5%9B%A0ID%E8%BD%AC%E6%8D%A2/"/>
      <url>/2021/07/27/%E5%9F%BA%E5%9B%A0ID%E8%BD%AC%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<p><a href="http://biit.cs.ut.ee/gprofiler/convert">http://biit.cs.ut.ee/gprofiler/convert</a></p><p>g:Profile 有很多神奇的功能</p><p>包括GO分析及KEGG分析，但是现阶段还是用DAVID进行GO和KEGG更妥当</p><p>因为在牛上，DAVID更新的更快</p><hr><p>利用g:Profile 将已知的gene symbol ID进行更换</p><p><img src="/2021/07/27/%E5%9F%BA%E5%9B%A0ID%E8%BD%AC%E6%8D%A2/image-20210727084351154.png" alt="image-20210727084351154"></p><p>左菜单栏单贴gene office symbol name</p><p>有菜单栏选择物种及目标基因输出名称</p><p><img src="/2021/07/27/%E5%9F%BA%E5%9B%A0ID%E8%BD%AC%E6%8D%A2/image-20210727084731876.png" alt="image-20210727084731876"></p><p>结果</p><p><img src="/2021/07/27/%E5%9F%BA%E5%9B%A0ID%E8%BD%AC%E6%8D%A2/image-20210727084744710.png" alt="image-20210727084744710"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>R语言：相关性计算</title>
      <link href="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/"/>
      <url>/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/</url>
      
        <content type="html"><![CDATA[<p>如果想做成相关性图</p><p>不管是基因表达之间的相关性或者是基因与性状之间的关联，可以用R包‘tidyverse’和‘corrplot’实现</p><p>首先是录入数据的要求</p><p>举个栗子！</p><p><img src="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/image-20210716102432133.png" alt="image-20210716102432133"></p><p>录入数据如上所示</p><p>横坐标代表的是所有相关性的基因或者表型或者你需要的其他数据</p><p>纵坐标代表重复，重复一般越多越好，三个重复也不是不能做，但是不会出什么好结果，至少重复在4以上</p><p>以上数据存储为.csv格式</p><hr><p>打开R</p><p>代码简单：</p><p>不过首先先确定运行文件夹<img src="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/image-20210716102827052.png" alt="image-20210716102827052"></p><p>然后导入数据，编辑数据表格</p><p>rm(list = ls())<br>getwd();<br>workingDir = “.”;<br>setwd(workingDir);<br>library(tidyverse)<br>library(corrplot)<br>data=read.csv(“example.csv”)<br>rownames(data)=data$ID<br>data1=data[,-1]<br>data=data1</p><p><img src="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/image-20210716102932528.png" alt="image-20210716102932528"></p><p><img src="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/image-20210716102940824.png" alt="image-20210716102940824"></p><p>最后data的格式如上！</p><p>运行分析代码：</p><p>cor(data) %&gt;% corrplot(method = “circle”,order = “hclust”,<br>                         type = “lower”,tl.srt = 45,tl.col = “black”)</p><p><img src="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/image-20210716103111129.png" alt="image-20210716103111129"></p><p>#下面是格式代码如有需要可自行运行</p><p>res1 &lt;- cor.mtest(data)<br>cor(data)%&gt;% corrplot(type=”lower”, order=”hclust”,tl.srt = 45,<br>                        tl.col = “black”,<br>                        p.mat = res1$p,insig = “p-value”,sig.level = -1)</p><p>cor(data)%&gt;% corrplot(type=”lower”, order=”hclust”,<br>                        p.mat = res1$p,insig = “p-value”)</p><p>cor(data)%&gt;% corrplot(type=”lower”,order=”hclust”,<br>                        p.mat = res1$p,insig = “blank”)</p><p>cor(data)%&gt;% corrplot(type=”lower”,order=”hclust”,<br>                        p.mat = res1$p, sig.level = .05)</p><p>cor(data)%&gt;% corrplot(type=”lower”,order=”hclust”,<br>                        p.mat = res1$p, sig.level = .01)</p><p>cor(data) %&gt;% corrplot(type=”lower”, order=”hclust”,<br>                         p.mat = res1$p,insig = “label_sig”,<br>                         sig.level = c(.001, .01, .05),<br>                         pch.cex = .9, pch.col = “white”,<br>                         tl.srt = 45,tl.col = “black”)</p><p><img src="/2021/07/16/R%E8%AF%AD%E8%A8%80%EF%BC%9A%E7%9B%B8%E5%85%B3%E6%80%A7%E8%AE%A1%E7%AE%97/image-20210716103224559.png" alt="image-20210716103224559"></p>]]></content>
      
      
      
        <tags>
            
            <tag> R语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统进化树构建</title>
      <link href="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/"/>
      <url>/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>系统发育树又名分子进化树，是<a href="https://baike.baidu.com/item/%E7%94%9F%E7%89%A9%E4%BF%A1%E6%81%AF%E5%AD%A6/24603501">生物信息学</a>中描述不同生物之间的相关关系的方法。通过<a href="https://baike.baidu.com/item/%E7%B3%BB%E7%BB%9F%E5%AD%A6/482697">系统学</a>分类分析可以帮助人们了解所有<a href="https://baike.baidu.com/item/%E7%94%9F%E7%89%A9/161443">生物</a>的进化历史过程。（百度到的）</p><p>第一步：</p><p>获取目的基因蛋白</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712083808467.png" alt="image-20210712083808467"></p><p>NCBI搜索，根据自己想要物种选择</p><p>获取蛋白序列</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712090807651.png" alt="image-20210712090807651"></p><hr><p>打开</p><p>MEGA7.0</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712092235047.png" alt="image-20210712092235047"></p><p>build Alignment后</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712092318829.png" alt="image-20210712092318829"></p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712092330548.png" alt="image-20210712092330548"></p><p>选择蛋白序列 新建文件 复制粘贴</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712092434913.png" alt="image-20210712092434913"></p><hr><p>录入完毕后</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712092829121.png" alt="image-20210712092829121"></p><p>点击</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712092953579.png" alt="image-20210712092953579"></p><p>后续默认</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712093043715.png" alt="image-20210712093043715"></p><p>回到开始菜单</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712093151345.png" alt="image-20210712093151345"></p><p>Phylogeny-Neighbor-Joining Tree（采用邻接法）</p><p>参数如下</p><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712094009279.png" alt="image-20210712094009279"></p><hr><p><img src="/2021/07/12/%E7%B3%BB%E7%BB%9F%E8%BF%9B%E5%8C%96%E6%A0%91%E6%9E%84%E5%BB%BA/image-20210712094214342.png" alt="image-20210712094214342"></p><p>结果如图，成图后可在设置进行细节调试</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>R语言导入表格</title>
      <link href="/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/"/>
      <url>/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<p>很多时候R语言read table读入txt文件时，如果不进行设置总会出现没有行名或者没有列名的情况</p><p><img src="/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/image-20210712082226021.png" alt="image-20210712082226021"></p><p><img src="/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/image-20210712082250703.png" alt="image-20210712082250703"></p><p>列名是1-12</p><p>行名时V1-V10</p><p>这时可以用一种笨办法，也就是命第一列和第一行名或列名为行/列名</p><p>然后再缩进一行或一列</p><hr><p>我以csv文件为例，因为读取csv是，R语言会默认读取的csv拥有列名</p><p><img src="/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/image-20210712082713381.png" alt="image-20210712082713381"></p><p><img src="/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/image-20210712082729855.png" alt="image-20210712082729855"></p><p>这时运行后续代码</p><p>rownames(data)=data$ID<br>data1=data[,-1]<br>data=data1</p><p><img src="/2021/07/12/R%E8%AF%AD%E8%A8%80%E5%AF%BC%E5%85%A5%E8%A1%A8%E6%A0%BC/image-20210712082825558.png" alt="image-20210712082825558"></p><p>data文件的行列设置完毕</p><hr><p>PS：感谢朝云大佬教学</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用NCBI效率的生成基因定量引物</title>
      <link href="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/"/>
      <url>/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<p>由于primer软件虽然可以调控出较为优质的定量引物</p><p>但是由于繁琐的过程，以及最后的基因blast，导致在设计多个基因多条引物的时候需要消耗掉大量时间</p><p>因此合理运用NCBI直接生成所需要的引物，是一个非常效率的方法</p><p>以成脂标志基因PPARγ为例</p><p>首选需要找到这个基因和这个基因所属的物种（我以牛为例）</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707165732663.png" alt="image-20210707165732663"></p><p>搜索后列表中第一个即可</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707165752433.png" alt="image-20210707165752433"></p><p>CTRL+F 搜索Genbank  进入</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707165844564.png" alt="image-20210707165844564"></p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707165905032.png" alt="image-20210707165905032"></p><p>此界面是目的基因信息</p><hr><p>由于基因定量需要用到RNA反转录成的cDNA</p><p>所以设计基因定量引物则需要在mRNA上进行</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707170036929.png" alt="image-20210707170036929"></p><p>可能某些基因有多个转录本mRNA（可变剪接）存在，但是如无必要，选第一个即可</p><p>点击transcript_id：后的链接</p><p>进入的页面就是mRNA序列页面，这其中包括不编码蛋白的5’UTR和3‘UTR</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707170252092.png" alt="image-20210707170252092"></p><p>搜寻pick primer直接点击进入</p><hr><p>基因定量引物的设计理念很简单</p><p>一般是退火温度要求在60°左右；80-200bp的序列长度；序列要跨基因外显子；不要有错配（如果要做绝对定量，则要试验出引物最佳退火温度）</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707170516530.png" alt="image-20210707170516530"></p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707170534427.png" alt="image-20210707170534427"></p><p>物种已经选好，并且选择mRNA库进行blast</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707171327715.png" alt="image-20210707171327715"><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707171337948.png" alt="image-20210707171337948"></p><p>因此配置如上图所示，生成</p><p>结果如图：</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707171056746.png" alt="image-20210707171056746"></p><p>由图可知：</p><p>primer6；primer9；primer8 跨外显子</p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707171201729.png" alt="image-20210707171201729"></p><p><img src="/2021/07/07/%E5%88%A9%E7%94%A8NCBI%E6%95%88%E7%8E%87%E7%9A%84%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%AE%9A%E9%87%8F%E5%BC%95%E7%89%A9/image-20210707171445922.png" alt="image-20210707171445922"></p><p>再看引物互补指数（越低越好）</p><p>因此 primer6；primer9 都可以用于基因定量</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>利用海外云服务器构建VPN</title>
      <link href="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/"/>
      <url>/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/</url>
      
        <content type="html"><![CDATA[<p>此材料仅用与学习，不作任何商业用途，为解决谷歌学术登录困难，SCI期刊网站速度慢等问题</p><p>通过搭建V2ray节点来科学上网</p><p>准备事项：</p><p>1.Xshell 下载链接：<a href="https://xshell.en.softonic.com/">https://xshell.en.softonic.com/</a>  </p><p>2.V2ray 下载链接：<a href="https://www.v2ray.com/chapter_00/install.html">https://www.v2ray.com/chapter_00/install.html</a></p><p>3.远程服务器：阿里云（新加坡、香港节点）或 vultr：<a href="https://www.vultr.com/?ref=8767843">https://www.vultr.com/?ref=8767843</a>  （我这里用的是 vultr）</p><p>Xshell用于登录远程服务器，V2ray在远程服务器中搭建后，在PC或安卓端安装后可进行科学上网，vultr购买云服务器 5美金一个月</p><hr><p>第一步：</p><p>vultr的购买，个人比较倾向于vultr，因为节点都是国外的，可选择的多，但一般还是选择日本，这样速度快一些</p><p>阿里云的新加坡、香港节点也可以，但是上不了DMM挺可惜</p><p>并且vultr有个优点是服务器想构建几个都行，很便宜，每次构建的金额很低，并且可以随时删除；但是构建完成后每个服务器都会按小时收费</p><p>5美金一个月是指单个服务器一个月的运行成本</p><p>vultr有一点是必须先付款然后才能进行服务器购买，首次购买金额随意，但是最低为10 USD，也就是60多 RMB</p><p>支付方式很贴心的有支付宝，所以注册和支付都不是问题</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706083538991.png" alt="image-20210706083538991"></p><p>支付完成后</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706083734491.png" alt="image-20210706083734491"></p><p>左上角Products开始创建</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706083857675.png" alt="image-20210706083857675"></p><p>进入后是没有服务器的，我的这个是已经构建好了的</p><p>点击创建</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706083953536.png" alt="image-20210706083953536"></p><p>选择云服务器</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084013932.png" alt="image-20210706084013932"></p><p>节点看要求，我的是日本</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084048123.png" alt="image-20210706084048123"></p><p>操作系统如下：Debian 9*64</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084118647.png" alt="image-20210706084118647"></p><p>就为了一个科学上网，那就选最便宜的</p><p>每月1000g的流量 ；云服务器是1核 1G运行内存和25G闪存</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084225009.png" alt="image-20210706084225009"></p><p>随意命名</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084252748.png" alt="image-20210706084252748"></p><p>创建</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084632421.png" alt="image-20210706084632421"></p><p>等待服务器Status显示为Running时构建完成</p><p>完成后进入可看到云服务器详细信息</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085026735.png" alt="image-20210706085026735"></p><hr><p>但是现在有个不得说的一点就是</p><p>由于大量不规范使用，导致包括vultr和阿里云等大量云服务器IP节点都被墙了</p><p>获得IP后务必要在一些ping在线测试网站中测试一下，看看能否在中国使用（像是ping值数千或者直接超时的那都是被墙了）</p><p>vultr的好处就体现在这，如果被墙了，就重新创建新ip地址的云服务器（无限创建，每次创建仅花费0.01美元），直到找到可用的IP（或者使用CDN加密，这个教程以后看情况出，我的IP也被墙了，但是加密后可以使用了，只是速度降低了一丢丢）</p><p>阿里云，腾讯云只能免费更换一次IP，这点非常不友好，这也是不选择国内云服务器的原因</p><hr><p>第二步</p><p>安装Xshell并且打开</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084452076.png" alt="image-20210706084452076"></p><p>左上角新建</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706084840777.png" alt="image-20210706084840777"></p><p>名称随意，在主机这一栏加入云服务器IP</p><p>然后按照要求输入用户名：root和密码（从云服务器界面复制）</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085321384.png" alt="image-20210706085321384"></p><p>进入服务器完成</p><p>使用大佬们的V2ray一键代码搭建： bash &lt;(curl -s -L <a href="https://git.io/v2ray.sh">https://git.io/v2ray.sh</a>)</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085412484.png" alt="image-20210706085412484"></p><p>进行安装</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085433831.png" alt="image-20210706085433831"></p><p>Enter 一串按下来，其实就都默认就行了</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085601617.png" alt="image-20210706085601617"></p><p>最后安装完毕，界面如下</p><p>这里提示提示: 输入  v2ray url  可生成 vmess URL 链接 / 输入  v2ray qr  可生成二维码链接</p><p>我们输入v2ray url  然后继续回车</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085743875.png" alt="image-20210706085743875"></p><p>生成的url直接用于粘贴</p><p>然后打开PC或者是安卓端的V2ray（这里选择PC端演示）</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706085915645.png" alt="image-20210706085915645"></p><p>点击左上角服务器选线，选择从剪贴板导入批量URL</p><p>选择该服务器点击重启服务</p><p>然后在参数设置中的    </p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706090138460.png" alt="image-20210706090138460"></p><p>http代理中选择PAC模式即可</p><p>最后就可以开始愉快的科学上网了</p><p><img src="/2021/07/06/%E5%88%A9%E7%94%A8%E6%B5%B7%E5%A4%96%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%A7%A3%E5%86%B3%E6%9E%84%E5%BB%BAVPN/image-20210706090313799.png" alt="image-20210706090313799"></p><hr>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基因染色体定位</title>
      <link href="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/"/>
      <url>/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/</url>
      
        <content type="html"><![CDATA[<p>想要做基因的染色体定位，陈程杰大神的TBtools直接能够实现</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704123730517.png" alt="image-20210704123730517"></p><p>直接搜索Gene location 选择Gene Location Visualize from GTF/GFF</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704124115864.png" alt="image-20210704124115864"></p><p>进入后界面如下</p><p>一次要录入的是</p><p>基因组注释文件</p><p>基因名称文件</p><p>基因重复对文件（可不录入）</p><p>基因颜色文件（可选）</p><p>更名文件（可选）</p><p>拖放包含染色体热图数据的文件（可不选）</p><hr><p>基因组注释文件获取</p><h3 id="推荐Ensembl-http-asia-ensembl-org-info-data-ftp-index-html"><a href="#推荐Ensembl-http-asia-ensembl-org-info-data-ftp-index-html" class="headerlink" title="推荐Ensembl http://asia.ensembl.org/info/data/ftp/index.html"></a>推荐Ensembl <a href="http://asia.ensembl.org/info/data/ftp/index.html">http://asia.ensembl.org/info/data/ftp/index.html</a></h3><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704124758191.png" alt="image-20210704124758191"></p><p>搜索仔细需要的物种</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704124814159.png" alt="image-20210704124814159"></p><p>点击GTF<img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704124846677.png" alt="image-20210704124846677"></p><p>下载倒数第三个</p><hr><p>基因名称文件制作</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704125005574.png" alt="image-20210704125005574"></p><p>录入格式是Gene_ID,在Ensembl的GTF注释文件中Gene_ID的表现格式是这样的</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704125124993.png" alt="image-20210704125124993"></p><hr><p>如果gene ID有重复</p><p>这进行基因重复对文件构建</p><p>录入格式也为TXT即可</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704125346160.png" alt="image-20210704125346160"></p><p>类似于这样的录入方式即可</p><hr><p>剩余的颜色，ID转换等文件录入方式与上面一致</p><p>都是‘基因ID’+‘TAB’+‘内容’</p><p>例如：我的gene ID的名字需要更换，所以</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704125547217.png" alt="image-20210704125547217"></p><p>将gene_ID更换为数字，其实更换为office gene symbol name也可以</p><p>然后点击star</p><p><img src="/2021/07/04/%E5%9F%BA%E5%9B%A0%E6%9F%93%E8%89%B2%E4%BD%93%E5%AE%9A%E4%BD%8D/image-20210704125827478.png" alt="image-20210704125827478"></p><p>基础的定位图片生成完毕</p><p>其余想要更改出自己中意的图请修改‘基因颜色文件’及图内设置</p><p>方法同理</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NCBI下载基因组注释文件</title>
      <link href="/2021/07/03/NCBI%E4%B8%8B%E8%BD%BD%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%B3%A8%E9%87%8A%E6%96%87%E4%BB%B6/"/>
      <url>/2021/07/03/NCBI%E4%B8%8B%E8%BD%BD%E5%9F%BA%E5%9B%A0%E7%BB%84%E6%B3%A8%E9%87%8A%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>NCBI生成基因启动子克隆引物</title>
      <link href="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/"/>
      <url>/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/</url>
      
        <content type="html"><![CDATA[<p>NCBI的blast是直接可以生成引物</p><p><a href="https://www.ncbi.nlm.nih.gov/">https://www.ncbi.nlm.nih.gov/</a></p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702094802857.png" alt="image-20210702094802857"></p><p>点击 Primer-blast</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702094841238.png" alt="image-20210702094841238"></p><p>界面如下</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702094903583.png" alt="image-20210702094903583"></p><p>需要关注的地方不多，一一讲解</p><hr><p>首先是启动子引物设计：</p><p>找到基因序列</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702111018416.png" alt="image-20210702111018416"></p><p>要求不高，物种正确，第一个即可</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702111312450.png" alt="image-20210702111312450"></p><p>进入后搜索：gene bank  点击进去后如下</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702111342014.png" alt="image-20210702111342014"></p><p>启动子有个默认的规则是 在基因转录起始位点前方2000bp左右</p><p>因此</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702111508117.png" alt="image-20210702111508117"><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702111528225.png" alt="image-20210702111528225"></p><p>直接修改region 向前2300bp左右</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702112436041.png" alt="image-20210702112436041"></p><p>复制1-2800bp的序列 点击pick primer</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702095444200.png" alt="image-20210702095444200"></p><hr><p>如果需要将启动子潜在的位点2000bp全部克隆下来，我们则需要再2300-2000bp左右设计上游引物；下游引物在2000bp后</p><p>因此!删除原有内容，直接复制，然后设置获得引物的区间</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702112552250.png" alt="image-20210702112552250"></p><p>其余参数如下：</p><p>PCR product size   Min：2000            Max:2500</p><p>Database: <img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702095854327.png" alt="image-20210702095854327"></p><p>需要关注的点在产物长度，和primer比对时的数据库，由于启动子在基因组(提取DNA克隆)上；因此选用全基因组数据库进行引物特异性检测</p><p><img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702100030893.png" alt="image-20210702100030893"></p><p>生成<img src="/2021/07/02/NCBI%E7%94%9F%E6%88%90%E5%9F%BA%E5%9B%A0%E5%90%AF%E5%8A%A8%E5%AD%90%E5%85%8B%E9%9A%86%E5%BC%95%E7%89%A9/image-20210702112913057.png" alt="image-20210702112913057"></p><p>出来的都是在基因组上特异性较好的引物了，自己挑选</p>]]></content>
      
      
      
        <tags>
            
            <tag> 实验技能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo图片无法显示问题</title>
      <link href="/2021/07/01/Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
      <url>/2021/07/01/Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>hexo版本3.7.8</p><p>用的是Typora编辑博客内容</p><p>也遇到了本地博客无法生成图片的问题</p><p><img src="/2021/07/01/Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/image-20210701164108398-1625128870290.png" alt="image-20210701164108398"></p><p>兜兜转转了好几遍，找到了问题</p><p>首先是插件</p><p>默认代码</p><p>npm install hexo-asset-image –save</p><p><img src="/2021/07/01/Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/image-20210701164235045-1625128956091.png" alt="image-20210701164235045"></p><p>在node_modules安装了一个挺老的版本但无所谓</p><p>然后就是_config.yml中</p><p>改post_asset_folder:为 true</p><p><img src="/2021/07/01/Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/image-20210701164604341.png" alt="image-20210701164604341"></p><hr><p>最后，我们需要调试Typora的偏好设置；设置结果如下！</p><p><img src="/2021/07/01/Hexo%E5%9B%BE%E7%89%87%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/image-20210701164728919.png" alt="image-20210701164728919"></p><p>结合Typora设置+hexo设置即可解决本地图片不显示问题！</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RNAhybrid使用方法</title>
      <link href="/2021/06/30/RNAhybrid%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2021/06/30/RNAhybrid%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<p>RNAhybrid的安装</p><p>#下载</p><p>wget -c <a href="https://bibiserv.cebitec.uni-bielefeld.de/applications/rnahybrid/resources/downloads/RNAhybrid-2.1.2.tar.gz">https://bibiserv.cebitec.uni-bielefeld.de/applications/rnahybrid/resources/downloads/RNAhybrid-2.1.2.tar.gz</a></p><p><img src="/2021/06/30/RNAhybrid%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/image-20210630145200619-1625128227840.png" alt="image-20210630145200619"></p><p>#解压（filename**.tar.gz**的解压:）</p><p>tar -zxvf RNAhybrid-2.1.2.tar.gz</p><p>#进入文件夹</p><p>cd RNAhybrid-2.1.2</p><p>./configure<br>make install</p><p>#配置、制作和安装 RNAhybrid。 要为 RNAhybrid 启用图形输出，您需要 ps 格式的库 g2 和 png 和 jpg 格式的 g2 和 gd。 如果没有这些库，只支持文本输出。</p><hr><p>#RNAhybrid的使用比较简单但是事先需准备好：1.目标物种的3‘UTR的.fa文件及目标物种的所有miRNA的.fa文件</p><p><img src="/2021/06/30/RNAhybrid%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/image-20210630145846703-1625128238605.png" alt="image-20210630145846703"></p><p>RNAhybrid的运行参数<br>-b <number of hits per target>  #意思是一个miRNA和一个target sequence的某一段序列匹配情况最多列出几次，比如一个miRNA和一个target sequence的某一段序列匹配存在多种情况，则-b 1就是列出最优的匹配情况，一般选1就比较好。这个最终得到的数目也与<energy cut-off>的设定值有关。<br>-c compact output  #使用这个参数，每一个匹配只会显示一行输出。如果只想知道结果是否与RNAhybrid校准的结果相同，建议使用这个参数。<br>-d <xi>,<theta>  #位置和形状参数<br>-f helix constraint  #<br>-h help<br>-m <max targetlength><br>-n <max query length><br>-u &lt;max internal loop size (per side)&gt;  #内部成环的错配碱基的个数，使用-u 0，将得到完全没有错配碱基内部成环的结构。<br>-v <max bulge loop size>  #internal loop是两条链都没有结合位点的内部环，而bulge loop是某一条上多出的碱基的突出<br>-e <energy cut-off>  #两条序列匹配的最低自由能，先设置 -e -30看看效果。<br>-p <p-value cut-off><br>-s (3utr_fly|3utr_worm|3utr_human)  #用于极值分布参数的快速估计，你可以选择nothing,3utr_fly, 3utr_worm和3utr_human来更好的匹配这些物种。你不能同时使用helix constrain和approximate p-value这两个参数。<br>-g (ps|png|jpg|all)  #图片输出的格式，有ps,png,jpg或者all四个选项<br>-t <target file>  #fasta格式的target gene文件<br>-q <query file>  #fasta格式的miRNA文件</query></target></p-value></energy></max></max></max></theta></xi></energy></number></p><hr><p>#RNAhybrid linux端的运行只需一行代码，较为简单基础代码如下，并且可根据自身需要调试</p><p>RNAhybrid -f 2,7 -d 1.9,0.28 -e -25 -v 1 -u 1 -t Bos_tur_All_3’UTR.fa -q Bos_All-miRNA.fa&gt;RNAhybrid_result</p><p>#如果是整个物种的3’UTR和所有miRNA进行匹配，速度较慢请耐心等待</p><p>#但一般情况是某一基因的3’UTR和所有miRNA进行匹配，这种结果一般是几秒钟就出来了（跟服务器的性能有关）</p><p>#最终的结果可以用</p><p>cat RNAhybrid_result</p><p>或是导出查看</p>]]></content>
      
      
      
        <tags>
            
            <tag> 分析手段 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/30/hello-world/"/>
      <url>/2021/06/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
